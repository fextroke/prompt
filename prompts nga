-- Prevent re-execution
if getgenv().PromptFixOptimized then return end
getgenv().PromptFixOptimized = true

local RANGE = 10
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- Toggle state
getgenv().PromptFixEnabled = false
local activePrompts = {}

-- Function to setup prompt
local function fixPrompt(prompt)
    if not prompt:IsA("ProximityPrompt") then return end
    prompt.HoldDuration = 0
    prompt.RequiresLineOfSight = false
    prompt.MaxActivationDistance = RANGE
end

-- Track prompts (once)
local prompts = {}
local function scanPrompts()
    for _, p in pairs(workspace:GetDescendants()) do
        if p:IsA("ProximityPrompt") and not table.find(prompts, p) then
            fixPrompt(p)
            table.insert(prompts, p)
        end
    end
end
scanPrompts()

-- Listen for new ones
workspace.DescendantAdded:Connect(function(d)
    if d:IsA("ProximityPrompt") then
        task.wait(0.1)
        fixPrompt(d)
        table.insert(prompts, d)
    end
end)

-- One-tap only nearby prompts loop (lightweight)
task.spawn(function()
    while true do
        if getgenv().PromptFixEnabled then
            local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                for _, prompt in ipairs(prompts) do
                    if prompt and prompt.Parent and prompt:IsDescendantOf(workspace) then
                        local dist = (hrp.Position - prompt.Parent.Position).Magnitude
                        prompt.Enabled = dist <= RANGE
                        if dist <= RANGE and not activePrompts[prompt] then
                            fireproximityprompt(prompt, 1, true)
                            activePrompts[prompt] = true
                            task.delay(1, function() activePrompts[prompt] = nil end) -- debounce
                        end
                    end
                end
            end
        end
        task.wait(0.2)
    end
end)

--== UI ==--
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "PromptUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 80)
frame.Position = UDim2.new(0.5, -110, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)
Instance.new("UIStroke", frame).Color = Color3.fromRGB(0, 255, 255)

local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(1, 0, 0.5, 0)
toggleBtn.Position = UDim2.new(0, 0, 0, 0)
toggleBtn.BackgroundTransparency = 1
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 14
toggleBtn.Text = "Prompt: OFF"
toggleBtn.TextColor3 = Color3.fromRGB(200, 255, 255)

local openCloseBtn = Instance.new("TextButton", frame)
openCloseBtn.Size = UDim2.new(1, 0, 0.5, 0)
openCloseBtn.Position = UDim2.new(0, 0, 0.5, 0)
openCloseBtn.BackgroundTransparency = 1
openCloseBtn.Font = Enum.Font.Gotham
openCloseBtn.TextSize = 14
openCloseBtn.Text = "Close UI"
openCloseBtn.TextColor3 = Color3.fromRGB(180, 180, 180)

-- Toggle logic
toggleBtn.MouseButton1Click:Connect(function()
    getgenv().PromptFixEnabled = not getgenv().PromptFixEnabled
    toggleBtn.Text = "Prompt: " .. (getgenv().PromptFixEnabled and "ON" or "OFF")
end)

-- Hide/show panel
local minimized = false
openCloseBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    frame:TweenSize(
        minimized and UDim2.new(0, 120, 0, 30) or UDim2.new(0, 220, 0, 80),
        Enum.EasingDirection.Out,
        Enum.EasingStyle.Quad,
        0.3, true
    )
    toggleBtn.Visible = not minimized
    openCloseBtn.Text = minimized and "Open UI" or "Close UI"
end)
